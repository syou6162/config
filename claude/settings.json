{
  "permissions": {
    "allow": [
      "Grep",
      "LS",
      "Glob",
      "WebFetch",
      "WebSearch",
      "Edit(.claude/tmp/*)",
      "Write(.claude/tmp/*)",

      "Bash(git commit:*)",
      "Bash(git restore:*)",
      "Bash(git rev-parse:*)",
      "Bash(git ls-files:*)",
      "Bash(git diff:*)",

      "Bash(gh issue create:*)",
      "Bash(gh issue view:*)",
      "Bash(gh issue comment:*)",

      "Bash(gh run view:*)",
      "Bash(gh run list:*)",

      "Bash(gh pr comment:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr checks:*)",
     
      "bash(gh repo view:*)",
      "bash(gh browse:*)",
      "Bash(gh search issues:*)",
      
      "Bash(ls:*)",
      "Bash(echo:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(mv:*)",
      "Bash(tree:*)",
      
      "Bash(sqlite3:*)",
      
      "Bash(uv run pytest:*)",
      "Bash(uv run:*)",

      "Bash(npm info:*)",
      "Bash(npm run lint:*)",
      "Bash(npx tsx:*)",
      "Bash(npm run test:run:*)",
      "Bash(npm install)",
      "Bash(npm view:*)",
      "Bash(npm run test:*)",
      "Bash(npm test:*)",
      "Bash(npm run format:*)",
      "Bash(npx vitest run:*)",
      "Bash(npm install:*)",
      "Bash(npm ls:*)",
      "Bash(npm run dev:*)",
      "Bash(npm run lint)",
      "Bash(npm run typecheck:*)",
      "Bash(npm start:*)",
      "Bash(npm run build:*)",
      
      "Bash(go build:*)",
      "Bash(go test:*)",
      "Bash(go vet:*)",
      "Bash(go tool cover:*)",
      "mcp__godoc-mcp__get_doc",
      
      "Bash(gcloud logging read:*)",
      "Bash(gcloud run jobs executions list:*)",
      "Bash(gcloud run jobs executions describe:*)",
      "Bash(gcloud run jobs list:*)",

      "Bash(terminal-notifier:*)",
      "Bash(ntfy publish:*)",

      "mcp__notion__API-retrieve-a-page",
      "mcp__notion__API-get-block-children",
      
      "Bash(git-sequential-stage:*)",
      "mcp__o3__o3-search",
      "mcp__chrome-tabs__open_in_new_tab",
      "mcp__chrome-tabs__read_tab_content",
      "mcp__chrome-tabs__list_tabs",
      "/times_esa:*",
      "/cccsc:syou6162:claude-code-commands:*"
    ],
    "deny": [
      "Grep(*.env)",
      "Read(*.env)",
      "Bash(git push:*)",
      "Bash(git add:*)",
      "Bash(git commit -am:*)",
      "Bash(git commit -a -m:*)",
      "Bash(git commit --all:*)",
      "Bash(git commit --no-verify:*)",
      "Bash(gh pr checkout:*)"
    ]
  },
  "hooks": {
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "cat > /tmp/cc_notification.json && terminal-notifier -title \"$(cat /tmp/cc_notification.json | jq -r '.hook_event_name')\" -subtitle \"$(cat /tmp/cc_notification.json | jq -r '.session_id')\" -message \"$(cat /tmp/cc_notification.json | jq -r '.message')\""
          },
          {
            "type": "command",
            "command": "cchook -event Notification"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "cchook -event Stop"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "cchook -event PreToolUse"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "cchook -event PostToolUse"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "cat | jq -r '.transcript_path' | xargs -I% cat % | jq -r '.sessionId' | tail -n 1",
    "padding": 0
  },
  "env": {
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR" : true,
    "ANTHROPIC_MODEL": "claude-sonnet-4-20250514"
  },
  "enableAllProjectMcpServers": false,
  "includeCoAuthoredBy": false,
  "cleanupPeriodDays": 1095
}
